<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.0-SNAPSHOT</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>io.wks</groupId>
    <artifactId>maven-flyway</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>Maven-Flyway</name>
    <description>Maven-Flyway</description>
    <properties>
        <java.version>17</java.version>
        <kotlin.version>1.8.20</kotlin.version>
        <jooq-codegen-maven.version>3.18.2</jooq-codegen-maven.version>
        <testcontainers.version>1.17.6</testcontainers.version>
        <h2.version>2.1.214</h2.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jooq</artifactId>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <configuration>
                    <args>
                        <arg>-Xjsr305=strict</arg>
                    </args>
                    <compilerPlugins>
                        <plugin>spring</plugin>
                    </compilerPlugins>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>${jooq-codegen-maven.version}</version>

                <!-- The plugin should hook into the generate goal -->
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>

                <!-- Manage the plugin's dependency. -->
                <dependencies>
                    <dependency>
                        <groupId>com.h2database</groupId>
                        <artifactId>h2</artifactId>
                        <version>${h2.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.jooq</groupId>
                        <artifactId>jooq-meta-extensions</artifactId>
                        <version>${jooq-codegen-maven.version}</version>
                    </dependency>
                </dependencies>

                <!-- Specify the plugin configuration.
                     The configuration format is the same as for the standalone code generator -->
                <configuration>


                    <!-- Generator parameters -->
                    <generator>
                        <database>
                            <name>org.jooq.meta.postgres.PostgresDatabase</name>
                            <includes>.*</includes>
                            <excludes></excludes>
                            <!-- In case your database supports catalogs, e.g. SQL Server:
                            <inputCatalog>public</inputCatalog>
                              -->
                            <inputSchema>public</inputSchema>
                        </database>
                        <target>
                            <packageName>io.wks.mavenflyway.jooq</packageName>
                            <directory>target/generated-sources/jooq</directory>
                        </target>
                        <generate>
                            <!-- https://www.jooq.org/doc/latest/manual/code-generation/codegen-advanced/codegen-config-generate/codegen-generate-annotations/ -->
                            <generatedAnnotation>true</generatedAnnotation>
                            <generatedAnnotationType>DETECT_FROM_JDK</generatedAnnotationType>
                            <generatedAnnotationDate>true</generatedAnnotationDate>
                            <generatedAnnotationJooqVersion>true</generatedAnnotationJooqVersion>

                            <constructorPropertiesAnnotation>true</constructorPropertiesAnnotation>
                            <constructorPropertiesAnnotationOnPojos>true</constructorPropertiesAnnotationOnPojos>
                            <constructorPropertiesAnnotationOnRecords>true</constructorPropertiesAnnotationOnRecords>

                            <!-- The springDao flag enables the generation of @Transactional annotations on a
           generated, Spring-specific DAO -->
                            <springAnnotations>true</springAnnotations>
                            <springDao>true</springDao>

                        </generate>
                        <database>
                            <!--
                                Generate Entities from migration files
                                https://www.jooq.org/doc/latest/manual/code-generation/codegen-ddl/ -->
                            <name>org.jooq.meta.extensions.ddl.DDLDatabase</name>
                            <properties>
                                <property>
                                    <key>scripts</key>
                                    <value>src/main/resources/db/migration/*.sql</value>
                                </property>
                                <property>
                                    <key>sort</key>
                                    <value>semantic</value>
                                </property>
                                <!-- The sort order of the scripts within a directory, where:
                                 - semantic: sorts versions, e.g. v-3.10.0 is after v-3.9.0 (default)
                                 - alphanumeric: sorts strings, e.g. v-3.10.0 is before v-3.9.0
                                 - flyway: sorts files the same way as flyway does
                                 - none: doesn't sort directory contents after fetching them from the directory -->
                                <property>
                                    <key>sort</key>
                                    <value>flyway</value>
                                </property>

                                <!-- The default schema for unqualified objects:
                                     - public: all unqualified objects are located in the PUBLIC (upper case) schema
                                     - none: all unqualified objects are located in the default schema (default)
                                     This configuration can be overridden with the schema mapping feature -->
                                <property>
                                    <key>unqualifiedSchema</key>
                                    <value>none</value>
                                </property>

                                <!-- The default name case for unquoted objects:
                                     - as_is: unquoted object names are kept unquoted
                                     - upper: unquoted object names are turned into upper case (most databases)
                                     - lower: unquoted object names are turned into lower case (e.g. PostgreSQL) -->
                                <property>
                                    <key>defaultNameCase</key>
                                    <value>lower</value>
                                </property>
                            </properties>
                        </database>
                    </generator>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <releases>
                <enabled>false</enabled>
            </releases>
        </pluginRepository>
    </pluginRepositories>

</project>
